{"version":3,"sources":["p2-homeworks/h1/Message.module.css","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.module.css","p2-homeworks/h4/HW4.module.css","p2-homeworks/h4/common/c2-SuperButton/SuperButton.module.css","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css","p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p2-homeworks/h4/common/c1-SuperInputText/SuperInputText.tsx","p2-homeworks/h4/common/c2-SuperButton/SuperButton.tsx","p2-homeworks/h4/common/c3-SuperCheckbox/SuperCheckbox.tsx","p2-homeworks/h4/HW4.tsx","p2-homeworks/h5/pages/PreJunior.tsx","p2-homeworks/h5/pages/Error404.tsx","p2-homeworks/h6/common/c4-SuperEditableSpan/SuperEditableSpan.tsx","p2-homeworks/h6/localStorage/localStorage.ts","p2-homeworks/h6/HW6.tsx","p2-homeworks/h7/common/c5-SuperSelect/SuperSelect.tsx","p2-homeworks/h7/common/c6-SuperRadio/SuperRadio.tsx","p2-homeworks/h7/HW7.tsx","p2-homeworks/h8/bll/homeWorkReducer.ts","p2-homeworks/h8/HW8.tsx","p2-homeworks/h5/pages/Junior.tsx","p2-homeworks/h5/pages/JuniorPlus.tsx","p2-homeworks/h5/Routes.tsx","p2-homeworks/h5/Header.tsx","p2-homeworks/h5/HW5.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Message","avatar","name","message","time","className","classes","post","src","alt","text","messageData","HW1","Affair","props","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","key","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","t","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","inputClass","s","value","onChange","GreetingContainer","users","addUserCallback","setName","setError","length","e","currentTarget","alert","HW3","setUsers","user","id","v1","console","log","SuperInputText","type","onChangeText","onKeyPress","onEnter","spanClassName","restProps","finalSpanClassName","finalInputClassName","errorInput","superInput","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","children","checkbox","checked","HW4","setText","setChecked","column","blue","PreJunior","Error404","SuperEditableSpan","autoFocus","onBlur","spanProps","editMode","setEditMode","onDoubleClick","restSpanProps","saveState","state","stateAsString","JSON","stringify","localStorage","setItem","restoreState","defaultState","getItem","parse","x","y","HW6","setValue","undefined","SuperSelect","options","onChangeOption","mappedOptions","index","SuperRadio","o","i","arr","HW7","homeWorkReducer","action","newState","sort","b","payload","reverse","age","initialPeople","HW8","people","setPeople","finalPeople","p","Junior","JuniorPlus","PATH","Routes","path","exact","render","to","Header","activeClassName","HW5","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e668ddea.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Message_post__3N7PK\",\"message\":\"Message_message__2yu6f\",\"name\":\"Message_name__3YnG7\",\"text\":\"Message_text__1TEM3\",\"time\":\"Message_time__295KZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInputText_superInput__3IIcj\",\"errorInput\":\"SuperInputText_errorInput__1Ik0a\",\"error\":\"SuperInputText_error__3stDH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"blue\":\"HW4_blue__T-IHw\",\"column\":\"HW4_column__3M0gl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__1ToWI\",\"red\":\"SuperButton_red__3B9BD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__2R9rf\",\"spanClassName\":\"SuperCheckbox_spanClassName__VpTym\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__178Gn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__IhL6Z\",\"error\":\"Greeting_error__2uY3Q\"};","import React from \"react\";\r\nimport classes from \"./Message.module.css\"\r\n\r\n\r\ntype MessageType = {\r\n    avatar: string\r\n    name: string\r\n    message: string\r\n    time: string\r\n}\r\n\r\nconst Message: React.FC<MessageType> = ({avatar, name, message, time})=> {\r\n    return (\r\n        <div className={classes.post}>\r\n            <img src={avatar} alt=\"avatar\"/>\r\n            <div className={classes.message}>\r\n                <div className={classes.name}>{name}</div>\r\n                <div className={classes.text}>{message}</div>\r\n                <div className={classes.time}>{time}</div>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from \"react\";\r\nimport Message from \"./Message\";\r\n\r\nconst messageData = {\r\n    avatar: \"https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg\",\r\n    name: \"Some Name\",\r\n    message: \"some text\",\r\n    time: \"22:00\",\r\n};\r\n\r\nfunction HW1() {\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n\r\n            {/*should work (должно работать)*/}\r\n\r\n\r\n            <hr/>\r\n            <Message\r\n                avatar={messageData.avatar}\r\n                name={messageData.name}\r\n                message={messageData.message}\r\n                time={messageData.time}\r\n            />\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW1;\r\n","import React from \"react\";\r\nimport {AffairType} from \"./HW2\";\r\n\r\ntype AffairPropsType = {\r\n\r\n    affair: AffairType\r\n    deleteAffairCallback: (id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id)\r\n\r\n    };// need to fix\r\n\r\n    return (\r\n        <div>\r\n            <span>{props.affair.name}-{props.affair.priority}</span>\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affair;\r\n","import React, {Dispatch, SetStateAction} from \"react\";\r\nimport Affair from \"./Affair\";\r\nimport {AffairType, FilterType} from \"./HW2\";\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>\r\n    setFilter: Dispatch<SetStateAction<FilterType>>\r\n    // serFilet: (s: FilterType) => any\r\n    deleteAffairCallback: (id: number) => void\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    }; // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    };\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    };\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    };\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Affairs;\r\n","import React, {useState} from \"react\";\r\nimport Affairs from \"./Affairs\";\r\n\r\n// types\r\nexport type AffairPriorityType = \"low\" | \"middle\" | \"high\"; //\r\nexport type AffairType = {\r\n    _id: number\r\n    name: string\r\n    priority: string\r\n};\r\nexport type FilterType = \"all\" | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [\r\n    {_id: 1, name: \"React\", priority: \"high\"},\r\n    {_id: 2, name: \"anime\", priority: \"low\"},\r\n    {_id: 3, name: \"games\", priority: \"low\"},\r\n    {_id: 4, name: \"work\", priority: \"high\"},\r\n    {_id: 5, name: \"html & css\", priority: \"middle\"},\r\n];\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: string): Array<AffairType> => {\r\n\r\n    switch (filter) {\r\n        case \"low\":\r\n            return affairs.filter(t => t.priority === \"low\")\r\n        case \"middle\":\r\n            return affairs.filter(t => t.priority === \"middle\")\r\n        case \"high\":\r\n            return affairs.filter(t => t.priority === \"high\")\r\n        default:\r\n            return affairs;\r\n    }\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(t => t._id !== _id)\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs);\r\n\r\n    const [filter, setFilter] = useState<FilterType>(\"all\");\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter);\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id));\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW2;\r\n","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./Greeting.module.css\";\r\n\r\ntype GreetingPropsType = {\r\n    name: string\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void\r\n    addUser: () => void\r\n    error: string\r\n    totalUsers: number\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers} // деструктуризация пропсов\r\n) => {\r\n        const inputClass = error ? s.error : \"\" ;\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback} className={inputClass}/>\r\n            <button onClick={addUser} className={inputClass}>add</button>\r\n            <span>{totalUsers}</span>\r\n            <hr/>\r\n            { error && <span>{\"Пожалуйста, ввеидте имя пользователя!\"}</span>}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Greeting;\r\n","import React, {useState, ChangeEvent} from \"react\";\r\nimport Greeting from \"./Greeting\";\r\nimport {UserType} from \"./HW3\";\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>;\r\n    addUserCallback: (t: string) => void // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\n\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => {\r\n    // деструктуризация пропсов\r\n    const [name, setName] = useState<string>(\"\");\r\n    const [error, setError] = useState<string>(\"\");\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value);\r\n    };\r\n\r\n    const addUser = () => {\r\n        if (name) {\r\n            addUserCallback(name);\r\n            alert(`Hello ${name} !`);\r\n            setName(\"\")\r\n        }\r\n        else {\r\n            setError(\"error\");}\r\n            };\r\n\r\n    const totalUsers = users.length;\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n        />\r\n    );\r\n}\r\n\r\nexport default GreetingContainer;\r\n","import React, {useState} from \"react\";\r\nimport GreetingContainer from \"./GreetingContainer\";\r\nimport {v1} from \"uuid\";\r\n\r\n\r\n\r\n// types\r\nexport type UserType = {\r\n    id: string\r\n    name: string\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]);\r\n\r\n    const addUserCallback = (name: string) => {\r\n        let user = {id: v1(), name: name}\r\n        setUsers([user, ...users]);\r\n        console.log(\"ss\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW3;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\r\nimport s from \"./SuperInputText.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperInputText: React.FC<SuperInputTextPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeText,\r\n        onKeyPress, onEnter,\r\n        error,\r\n        className, spanClassName,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange && onChange(e);\r\n // если есть пропс onChange, то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeText && onChangeText(e.currentTarget.value);\r\n    }\r\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        onKeyPress && onKeyPress(e);\r\n\r\n        e.key === \"Enter\" // если нажата кнопка Enter\r\n        && onEnter // и есть пропс onEnter\r\n        && onEnter(); // то вызвать его\r\n    }\r\n\r\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\r\n    const finalInputClassName = error ? `${s.errorInput} ${className}` : s.superInput; // need to fix with (?:) and\r\n\r\n    return (\r\n        <>\r\n            <input\r\n                type={\"text\"}\r\n                onChange={onChangeCallback}\r\n                onKeyPress={onKeyPressCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n            />\r\n            {error && <span className={finalSpanClassName}>{error}</span>}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperInputText;\r\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\r\nimport s from \"./SuperButton.module.css\";\r\n\r\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\r\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\r\n\r\ntype SuperButtonPropsType = DefaultButtonPropsType & {\r\n    red?: boolean\r\n}\r\n\r\nconst SuperButton: React.FC<SuperButtonPropsType> = (\r\n    {\r\n        red, className,\r\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\r\n    }\r\n) => {\r\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\r\n\r\n    return (\r\n        <button\r\n            className={finalClassName}\r\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\r\n        />\r\n    );\r\n}\r\n\r\nexport default SuperButton;\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\r\nimport s from \"./SuperCheckbox.module.css\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n\r\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n    spanClassName?: string\r\n};\r\n\r\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\r\n    {\r\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\r\n        onChange, onChangeChecked,\r\n        className, spanClassName,\r\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // сделайте так чтоб работал onChange и onChangeChecked\r\n        onChange && onChange(e);\r\n        // если есть пропс onChange, то передать ему е (поскольку onChange не обязателен)\r\n\r\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\r\n\r\n    return (\r\n        <label>\r\n            <input\r\n                type={\"checkbox\"}\r\n                onChange={onChangeCallback}\r\n                className={finalInputClassName}\r\n\r\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\r\n            />\r\n            {children && <span className={s.spanClassName}>{children}</span>}\r\n        </label> // благодаря label нажатие на спан передастся в инпут\r\n    );\r\n}\r\n\r\nexport default SuperCheckbox;\r\n","import React, {ChangeEvent, useState} from \"react\";\r\nimport SuperInputText from \"./common/c1-SuperInputText/SuperInputText\";\r\nimport s from \"./HW4.module.css\";\r\nimport SuperButton from \"./common/c2-SuperButton/SuperButton\";\r\n     import SuperCheckbox from \"./common/c3-SuperCheckbox/SuperCheckbox\";\r\n\r\nfunction HW4() {\r\n    const [text, setText] = useState<string>(\"\");\r\n    const error = text ? \"\" : \"error\";\r\n    const showAlert = () => {\r\n        if (error) {\r\n            alert(\"введите текст...\");\r\n        } else {\r\n            alert(text); // если нет ошибки показать текст\r\n        }\r\n    }\r\n\r\n    const [checked, setChecked] = useState<boolean>(false);\r\n    const testOnChange = (e: ChangeEvent<HTMLInputElement>) => setChecked(e.currentTarget.checked);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 4\r\n\r\n            <div className={s.column}>\r\n                {/*should work (должно работать)*/}\r\n                <SuperInputText\r\n                    value={text}\r\n                    onChangeText={setText}\r\n                    onEnter={showAlert}\r\n                    error={error}\r\n                    className={s.blue} // проверьте, рабоет ли смешивание классов\r\n                />\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperButton\r\n                    red\r\n                    // red = {true}\r\n                >\r\n                    test  {/*// название кнопки попадёт в children*/}\r\n                </SuperButton>\r\n\r\n\r\n                {/*should work (должно работать)*/}\r\n                <SuperCheckbox\r\n                    checked={checked}\r\n                    onChangeChecked={setChecked}\r\n                >\r\n                    some text {/*// этот текст попадёт в children*/}\r\n                </SuperCheckbox>\r\n\r\n                {/*// onChange тоже должен работать*/}\r\n                <SuperCheckbox checked={checked} onChange={testOnChange}/>\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperInputText/>*/}\r\n            {/*<AlternativeSuperButton/>*/}\r\n            {/*<AlternativeSuperCheckbox/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW4;\r\n","import React from \"react\";\r\nimport HW1 from \"../../h1/HW1\";\r\nimport HW2 from \"../../h2/HW2\";\r\nimport HW3 from \"../../h3/HW3\";\r\nimport HW4 from \"../../h4/HW4\";\r\n\r\nfunction PreJunior() {\r\n    return (\r\n        <div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            <HW4/>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PreJunior;\r\n","import React from \"react\";\r\n\r\nfunction Error404() {\r\n    return (\r\n        <div>\r\n            <div>404</div>\r\n            <div>Page not found!</div>\r\n            <div>—ฅ/ᐠ.̫ .ᐟ\\ฅ—</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Error404;\r\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\r\nimport SuperInputText from \"../../../h4/common/c1-SuperInputText/SuperInputText\";\r\n\r\n// тип пропсов обычного инпута\r\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\r\n// тип пропсов обычного спана\r\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\r\n\r\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\r\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\r\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\r\n    onChangeText?: (value: string) => void\r\n    onEnter?: () => void\r\n    error?: string\r\n    spanClassName?: string\r\n\r\n    spanProps?: DefaultSpanPropsType // пропсы для спана\r\n};\r\n\r\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\r\n    {\r\n        autoFocus, // игнорировать изменение этого пропса\r\n        onBlur,\r\n        onEnter,\r\n        spanProps,\r\n\r\n        ...restProps// все остальные пропсы попадут в объект restProps\r\n    }\r\n) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false);\r\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\r\n\r\n    const onEnterCallback = () => {\r\n        setEditMode(!editMode); // выключить editMode при нажатии Enter\r\n\r\n        onEnter && onEnter();\r\n    };\r\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        setEditMode(!editMode); // выключить editMode при нажатии за пределами инпута\r\n\r\n        onBlur && onBlur(e);\r\n    };\r\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\r\n        setEditMode(!editMode); // включить editMode при двойном клике\r\n\r\n        onDoubleClick && onDoubleClick(e);\r\n    };\r\n\r\n    const spanClassName = `${\"сделать красивый стиль для спана\"} ${className}`;\r\n\r\n    return (\r\n        <>\r\n            {editMode\r\n                ? (\r\n                    <SuperInputText\r\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\r\n                        onBlur={onBlurCallback}\r\n                        onEnter={onEnterCallback}\r\n\r\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\r\n                    />\r\n                ) : (\r\n                    <span\r\n                        onDoubleClick={onDoubleClickCallBack}\r\n                        className={spanClassName}\r\n\r\n                        {...restSpanProps}\r\n                    >\r\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\r\n                        {children || restProps.value}\r\n                    </span>\r\n                )\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperEditableSpan;\r\n","// вот вам функция для сохранения объектов в память браузера\r\n// (данные в этом хранилище сохраняться даже при перезагрузке компа):\r\nexport function saveState<T>(key: string, state: T) { //типизация дженериков\r\n    const stateAsString = JSON.stringify(state);\r\n    localStorage.setItem(key, stateAsString)\r\n}\r\n\r\n// и вот вам функция для получения сохранённого объекта в памяти браузера:\r\nexport function restoreState<T>(key: string, defaultState: T) {\r\n    const stateAsString = localStorage.getItem(key);\r\n    if (stateAsString !== null) defaultState = JSON.parse(stateAsString) as T;\r\n    return defaultState;\r\n}\r\n\r\n// ---------------------------------------------------------------------------------------------------------------\r\n// использование:\r\ntype StateType = {\r\n    x: string\r\n    y: number\r\n}\r\n\r\n// сохраняем объект типа StateType в ячейке \"test\"\r\nsaveState<StateType>(\"test\", {x: \"A\", y: 1});\r\n\r\n// получем в переменную state объект из ячейки \"test\" или дэфолтный объект если ячейка пуста\r\nconst state: StateType = restoreState<StateType>(\"test\", {x: \"\", y: 0});\r\n","import React, {useState} from \"react\";\r\nimport SuperEditableSpan from \"./common/c4-SuperEditableSpan/SuperEditableSpan\";\r\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\r\nimport {restoreState, saveState} from \"./localStorage/localStorage\";\r\n\r\nfunction HW6() {\r\n    const [value, setValue] = useState<string>(\"\");\r\n\r\n    const save = () => {\r\n        saveState<string>(\"editable-span-value\", value);\r\n    };\r\n    const restore = () => {\r\n        setValue(restoreState(\"editable-span-value\",value));\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 6\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperEditableSpan\r\n                    value={value}\r\n                    onChangeText={setValue}\r\n                    spanProps={{children: value ? undefined : \"enter text...\"}}\r\n                />\r\n            </div>\r\n            <SuperButton onClick={save}>save</SuperButton>\r\n            <SuperButton onClick={restore}>restore</SuperButton>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperEditableSpan/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW6;\r\n","import React, {ChangeEvent, DetailedHTMLProps, SelectHTMLAttributes} from \"react\";\r\n\r\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\r\n\r\ntype SuperSelectPropsType = DefaultSelectPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\r\n    {\r\n        options,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const mappedOptions: JSX.Element[] =\r\n        options ? options.map((t, index) => <option key={index}>{t}</option>) : []\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={onChangeCallback} {...restProps}>\r\n            {mappedOptions}\r\n        </select>\r\n    );\r\n}\r\n\r\nexport default SuperSelect;\r\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\r\n\r\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\ntype SuperRadioPropsType = DefaultRadioPropsType & {\r\n    options?: any[]\r\n    onChangeOption?: (option: any) => void\r\n}\r\n\r\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\r\n    {\r\n        type, name,\r\n        options, value,\r\n        onChange, onChangeOption,\r\n        ...restProps\r\n    }\r\n) => {\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        // onChange, onChangeOption\r\n        onChangeOption && onChangeOption(e.currentTarget.value)\r\n\r\n    }\r\n\r\n\r\n    const mappedOptions: JSX.Element[] = options ? options.map((o, i) => ( // map options with key\r\n        <label key={name + \"-\" + i}>\r\n            <input\r\n                type={\"radio\"}\r\n                onChange={onChangeCallback}\r\n                name={name}\r\n                value={value}\r\n                {...restProps}\r\n\r\n                // name, checked, value, onChange\r\n            />\r\n            {o}\r\n        </label>\r\n    )) : [];\r\n\r\n    return (\r\n        <>\r\n            {mappedOptions}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SuperRadio;\r\n","import React, {useState} from \"react\";\r\nimport SuperSelect from \"./common/c5-SuperSelect/SuperSelect\";\r\nimport SuperRadio from \"./common/c6-SuperRadio/SuperRadio\";\r\n\r\nconst arr = [\"x\", \"y\", \"z\"];\r\n\r\nfunction HW7() {\r\n    const [value, onChangeOption] = useState(arr[1]);\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 7\r\n\r\n            {/*should work (должно работать)*/}\r\n            <div>\r\n                <SuperSelect\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n            <div>\r\n                <SuperRadio\r\n                    name={\"radio\"}\r\n                    options={arr}\r\n                    value={value}\r\n                    onChangeOption={onChangeOption}\r\n                />\r\n            </div>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeSuperSelect/>*/}\r\n            {/*<AlternativeSuperRadio/>*/}\r\n            <hr/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default HW7;\r\n","export const SORT_PEOPLE = 'sort'\nexport const SORT_PEOPLE_MORE_18 = 'SORT_PEOPLE_MORE_18'\n\nexport type PeopleStateType = Array<{\n    _id: number\n    name: string\n    age: number\n}>\n\ntype HomeWorkActionsType =\n    ReturnType<typeof SortPeopleUpAC> | ReturnType<typeof SortPeople18MoreAC>\n\nexport const homeWorkReducer = (state: PeopleStateType, action: HomeWorkActionsType): PeopleStateType => {\n    switch (action.type) {\n        case SORT_PEOPLE: {\n            let newState = [...state.sort((a, b) => {\n                if (a.name < b.name) {\n                    return -1\n                }\n                if (a.name < b.name) {\n                    return 1\n                } else return 0\n            })\n            ];\n            if (action.payload === \"up\") {\n                return newState\n            } else return newState.reverse()\n        }\n\n        case SORT_PEOPLE_MORE_18: {\n            return state.filter(a => a.age > 18)\n        }\n        default:\n            return state\n    }\n};\n\nexport const SortPeopleUpAC = (payload: \"up\" | \"down\") => {\n    return {type: SORT_PEOPLE, payload: payload} as const\n};\n\n\nexport const SortPeople18MoreAC = () => {\n    return {type: SORT_PEOPLE_MORE_18} as const\n};","import React, {useState} from \"react\";\nimport {homeWorkReducer, SORT_PEOPLE, SORT_PEOPLE_MORE_18} from \"./bll/homeWorkReducer\";\nimport SuperButton from \"../h4/common/c2-SuperButton/SuperButton\";\n\nconst initialPeople = [\n    {_id: 0, name: \"Кот\", age: 3},\n    {_id: 1, name: \"Александр\", age: 66},\n    {_id: 2, name: \"Коля\", age: 16},\n    {_id: 3, name: \"Виктор\", age: 44},\n    {_id: 4, name: \"Дмитрий\", age: 40},\n    {_id: 5, name: \"Ирина\", age: 55},\n]\n\nfunction HW8() {\n    const [people, setPeople] = useState(initialPeople);\n\n    const finalPeople = people.map(p => (\n        <div key={p._id}>\n            <span>{`${p.name} ${p.age}`}</span>\n        </div>\n    ))\n\n    const sortUp = () => setPeople(homeWorkReducer(initialPeople, {type: SORT_PEOPLE, payload: \"up\"}))\n    const sortDown = () => setPeople(homeWorkReducer(initialPeople, {type: SORT_PEOPLE, payload: \"down\"}))\n    const sort18more = () => setPeople(homeWorkReducer(initialPeople, {type: SORT_PEOPLE_MORE_18}))\n\n    return (\n        <div>\n            <hr/>\n            homeworks 8\n\n            {/*should work (должно работать)*/}\n\n            {finalPeople}\n            <div><SuperButton onClick={sortUp}>sort up</SuperButton></div>\n            <div><SuperButton onClick={sortDown}>sort down</SuperButton></div>\n            <div><SuperButton onClick={sort18more}>sort 18+</SuperButton></div>\n\n\n\n            <hr/>\n            {/*для личного творчества, могу проверить*/}\n            {/*<AlternativePeople/>*/}\n            <hr/>\n        </div>\n    );\n}\n\nexport default HW8;\n","import React from \"react\";\r\nimport HW6 from \"../../h6/HW6\";\r\nimport HW7 from \"../../h7/HW7\";\r\nimport HW8 from \"../../h8/HW8\";\r\n\r\nexport const Junior = () => {\r\n    return (\r\n        <>\r\n            <HW6/>\r\n            <HW7/>\r\n            <HW8/>\r\n        </>\r\n    );\r\n};","import React from \"react\";\r\n\r\n\r\n\r\nexport const JuniorPlus = () => {\r\n    return (\r\n        <div>JuniorPlus</div>\r\n    );\r\n};","import React from \"react\";\r\nimport {Switch, HashRouter, Route, Redirect} from \"react-router-dom\";\r\nimport PreJunior from \"./pages/PreJunior\";\r\nimport Error404 from \"./pages/Error404\";\r\nimport {Junior} from \"./pages/Junior\";\r\nimport {JuniorPlus} from \"./pages/JuniorPlus\";\r\n\r\nexport const PATH = {\r\n    PRE_JUNIOR: \"/pre-junior\",\r\n    JUNIOR: \"/Junior\",\r\n    JUNIOR_PLUS: \"/Jun iorPlus\"\r\n}\r\n\r\nfunction Routes() {\r\n    return (\r\n\r\n        <div>\r\n            {/*Switch выбирает первый подходящий роут*/}\r\n\r\n            <Switch>\r\n                <Route path={\"/\"} exact render={() => <Redirect to={PATH.PRE_JUNIOR}/>}/>\r\n                <Route exact path={PATH.PRE_JUNIOR} render={() => <PreJunior/>}/>\r\n                <Route exact path={PATH.JUNIOR} render={() => <Junior/>}/>\r\n                <Route exact path={PATH.JUNIOR_PLUS} render={() => <JuniorPlus/>}/>\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Routes;\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PATH} from \"./Routes\";\r\n\r\n\r\n\r\nfunction Header() {\r\n    return (\r\n        <div>\r\n            <nav className={\"\"}>\r\n                <div className={\"\"}>\r\n                    <NavLink to={PATH.PRE_JUNIOR} activeClassName={\"\"}>PreJunior</NavLink>\r\n                </div>\r\n                <div className={\"\"}>\r\n                    <NavLink to={PATH.JUNIOR} activeClassName={\"\"}>Junior</NavLink>\r\n                </div>\r\n                <div className={\"\"}>\r\n                    <NavLink to={PATH.JUNIOR_PLUS} activeClassName={\"\"}>JuniorPlus</NavLink>\r\n                </div>\r\n\r\n\r\n            </nav>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nimport Routes from \"./Routes\";\r\nimport {HashRouter} from \"react-router-dom\";\r\n\r\nfunction HW5() {\r\n    return (\r\n        <HashRouter>\r\n            <div>\r\n                <Header/>\r\n                <Routes/>\r\n            </div>\r\n        </HashRouter>\r\n    );\r\n}\r\n\r\nexport default HW5;\r\n","import React from \"react\";\r\nimport s from \"./App.module.css\";\r\nimport HW1 from \"../../../p2-homeworks/h1/HW1\";\r\nimport HW3 from \"../../../p2-homeworks/h3/HW3\";\r\nimport HW4 from \"../../../p2-homeworks/h4/HW4\";\r\nimport HW5 from \"../../../p2-homeworks/h5/HW5\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            {/*<HW1/>*/}\r\n            {/*<HW2/>*/}\r\n          {/*  <HW3/>*/}\r\n          {/*  <HW4/>*/}\r\n            <HW5/>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./p1-main/m1-ui/u1-app/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}